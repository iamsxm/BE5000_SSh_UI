name: build-go-binary


on:
  release:
    types: [created] # 表示在创建新的 Release 时触发
permissions:
  contents: write
  packages: write

jobs:
  build-go-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows] # 需要打包的系统
        goarch: [amd64] # 需要打包的架构
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: install dependencies
        run: |
          sudo apt-get install gcc-mingw-w64
          sudo apt install xorg-dev
          go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: download icon
        run: |
          curl -L https://raw.githubusercontent.com/iamsxm/BE5000_SSh_UI/master/xiaomi_icon.png > Icon.png

      - name: build release
        run: |
          export CC=x86_64-w64-mingw32-gcc
          fyne package -os  ${{ matrix.goos }}
          mkdir -p build/bin
          mkdir -p build/release
          ls ./
          mv BE5000_SSh.exe ./build/bin
          mv dropbear ./build/bin
          mv dropbearkey ./build/bin
          zip -r ./build/release/BE5000_SSh_${{ matrix.goos }}_${{ matrix.goarch }}.zip ./build/bin
          ls ./build/release/*
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./build/release/*"